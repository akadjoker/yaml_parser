name: C++ CI

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  test:
    name: Build and Test
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [ubuntu-latest]
        build-type: [test, debug, release]
        exclude:
          - os: windows-latest
            build-type: debug  # Address sanitizer issues on Windows
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup C++ environment
      uses: aminya/setup-cpp@v1
      with:
        compiler: gcc
        
    - name: Install dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential valgrind cppcheck  
               
    - name: Verify build environment
      run: |
        g++ --version
        make help
        
    - name: Build and test (${{ matrix.build-type }})
      run: |
        make clean
        make ${{ matrix.build-type }}
        
    - name: Performance benchmark
      if: matrix.build-type == 'release'
      run: |
        make performance

  quality-assurance:
    name: Quality Assurance
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install QA tools
      run: |
        sudo apt-get update
        sudo apt-get install -y cppcheck valgrind 
        
       
 
